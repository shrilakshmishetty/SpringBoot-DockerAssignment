version: '3.8'

services:
  order-service:
    image: order-service
    build:
      context: ./OrderAssignment
    ports:
      - "8085:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db_order:3306/order_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS=db_kafka:9092
    depends_on:
      - db_order
    networks:
      - my-network

  product-service:
    image: product-service
    build:
      context: ./MicroServicesAssignment
    ports:
      - "8086:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db_product:3306/micro_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS=db_kafka:9092
      - SPRING_KAFKA_CONSUMER_GROUP_ID=group-1
    depends_on:
      - db_product
    networks:
      - my-network

  db_order:
    image: mysql:8
    environment:
      MYSQL_DATABASE: order_db
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "33061:3306"  
    volumes:
      - db_order_data:/var/lib/mysql  
    networks:
      - my-network

  db_product:
    image: mysql:8
    environment:
      MYSQL_DATABASE: micro_db
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "33062:3306"  
    volumes:
      - db_product_data:/var/lib/mysql  
    networks:
      - my-network

  db_kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://db_kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - my-network

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - my-network

networks:
  my-network:
    driver: bridge

volumes:
  db_order_data:
  db_product_data:
